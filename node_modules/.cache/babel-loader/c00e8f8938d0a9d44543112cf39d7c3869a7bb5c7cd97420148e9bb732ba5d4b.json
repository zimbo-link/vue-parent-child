{"ast":null,"code":"import BookmarkItem from './bookmark-item';\nexport default {\n  name: 'BookmarkContainer',\n  components: {\n    BookmarkItem\n  },\n  data() {\n    return {\n      bool: false,\n      text: '',\n      items: []\n    };\n  },\n  created() {\n    // Mock API call here. In this case it's returned data but we only need for example one of the properties.\n  },\n  methods: {\n    toggleBool() {\n      console.log('test');\n      this.bool != this.bool;\n    },\n    toggleBookmark() {\n      //const foundItem = this.items.find(i => i.id === itemId);\n      //foundItem.bookmarked = !foundItem.bookmarked;\n\n      this.bool = !this.bool;\n      console.log('test');\n    },\n    changeText(val) {\n      console.log(val);\n      this.text = val;\n    },\n    toggleAll() {\n      /* for (const item of this.items) {\n           item.bookmarked = !item.bookmarked;\n       } */\n    },\n    callApi() {\n      // Mock API call here. This time we create a new array and only post relevant data.\n      // Note how the local component state does not have to match 1:1 with any data from a GET or to a POST/PUT.\n      /*const mockApiCall = this.items.map(item => ({\n          id: item.id,\n          bookmarked: item.bookmarked,\n          favouriteNumber: Math.random(),\n      }));\n       console.log(mockApiCall);\n      */\n    }\n  }\n};","map":{"version":3,"names":["BookmarkItem","name","components","data","bool","text","items","created","methods","toggleBool","console","log","toggleBookmark","changeText","val","toggleAll","callApi"],"sources":["/home/trev/assessments/edukudu-vue/parent-child/vueapp/src/components/bookmark-container.vue"],"sourcesContent":["<template>\n    <div style=\"border:1px solid black; margin: 10px;\">\n        <h1>Parent Component</h1>\n        <div>Bool: <span>{{this.bool}}</span></div>\n        <div>Text: <span>{{this.text}}</span></div>\n        <bookmark-item \n            v-on:bookmark-toggle=\"toggleBookmark\" \n            v-on:change-text=\"changeText\"\n            />\n    </div>\n</template>\n\n<script>\nimport BookmarkItem from './bookmark-item';\n\nexport default {\n    name: 'BookmarkContainer',\n    components: {\n        BookmarkItem\n    },\n    data () {\n        return {\n            bool: false,\n            text: '',\n            items: []\n        }\n    },\n    created () {\n        // Mock API call here. In this case it's returned data but we only need for example one of the properties.\n     \n    },\n    methods: {\n        toggleBool (){\n            console.log('test');\n            this.bool != this.bool\n        },\n        toggleBookmark () {\n            //const foundItem = this.items.find(i => i.id === itemId);\n            //foundItem.bookmarked = !foundItem.bookmarked;\n\n            this.bool = !this.bool\n            console.log('test');\n        },\n        changeText ( val ) {\n            console.log(val)\n            this.text = val\n        },\n        toggleAll () {\n           /* for (const item of this.items) {\n                item.bookmarked = !item.bookmarked;\n            } */\n        },\n        callApi () {\n            // Mock API call here. This time we create a new array and only post relevant data.\n            // Note how the local component state does not have to match 1:1 with any data from a GET or to a POST/PUT.\n            /*const mockApiCall = this.items.map(item => ({\n                id: item.id,\n                bookmarked: item.bookmarked,\n                favouriteNumber: Math.random(),\n            }));\n\n            console.log(mockApiCall);\n            */\n        }\n    }\n}\n</script>"],"mappings":"AAaA,OAAOA,YAAW,MAAO,iBAAiB;AAE1C,eAAe;EACXC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAMA,CAAA,EAAK;IACP;EAAA,CAEH;EACDC,OAAO,EAAE;IACLC,UAASA,CAAA,EAAI;MACTC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI,CAACP,IAAG,IAAK,IAAI,CAACA,IAAG;IACzB,CAAC;IACDQ,cAAaA,CAAA,EAAK;MACd;MACA;;MAEA,IAAI,CAACR,IAAG,GAAI,CAAC,IAAI,CAACA,IAAG;MACrBM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACvB,CAAC;IACDE,UAASA,CAAIC,GAAE,EAAI;MACfJ,OAAO,CAACC,GAAG,CAACG,GAAG;MACf,IAAI,CAACT,IAAG,GAAIS,GAAE;IAClB,CAAC;IACDC,SAAQA,CAAA,EAAK;MACV;;;IAAA,CAGF;IACDC,OAAMA,CAAA,EAAK;MACP;MACA;MACA;;;;;;;IAAA;EASR;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}